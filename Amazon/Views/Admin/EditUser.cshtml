@model Amazon.ViewModels.EditUserViewModel

@{
    ViewData["Title"] = "Edit User";
}

<h1>Edit User</h1>

<form asp-action="UpdateUser" method="post">
    <input type="hidden" name="UserId" value="@Model.UserId" />
    
    <div class="form-group">
        <label for="UserName">User Name</label>
        <input type="text" class="form-control" id="UserName" name="UserName" value="@Model.UserName" readonly />
    </div>
    
    <div class="form-group">
        <label for="Email">Email</label>
        <input type="email" class="form-control" id="Email" name="Email" value="@Model.Email" />
    </div>
    
    <div class="form-group">
        <label for="RoleName">Role</label>
        <select id="RoleName" name="SelectedRole" class="form-select">
            <option value="">Select Role</option>
            @foreach (var role in Model.Roles)
            {
                var selected = role.Name == Model.SelectedRole ? "selected" : "";
            <option value="@role.Name" >@role.Name</option>
            }
        </select>
    </div>



    <div class="form-group">
        <label asp-for="IsEnabled"></label>
        <input asp-for="IsEnabled" class="form-control" type="checkbox" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary" onclick="return confirmSave();">Save Changes</button>
        <a href="@Url.Action("Index", "Admin")" class="btn btn-secondary" onclick="return confirmCancel();">Cancel</a>
    </div>

    <br />

</form>

@section Scripts {
    <script>
        function confirmSave() {
            return confirm("Are you sure you want to save the changes?");
        }

        function confirmCancel() {
            return confirm("Do you want to cancel your changes?");
        }
    </script>
}
